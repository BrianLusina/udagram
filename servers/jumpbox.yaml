AWSTemplateFormatVersion: "2010-09-09"
Description: " Create an Amazon EC2 instance which acts as the Bastion Host. This example creates an EC2 security group for the instance to give you SSH access."
Parameters:
 EnvironmentName:
  Description: An environment name that should match the name used to create the network.
  Type: String
  Default: Udacity 

 KeyName: 
  Description: "Name of an existing EC2 KeyPair to enable SSH access to the instance"
  Type: "AWS::EC2::KeyPair::KeyName"
  Default: AmitTestKP
  ConstraintDescription: "must be the name of an existing EC2 KeyPair."

 AMI:
  Description: 'The Machine Image to be used. Please use an Ubuntu Machine Image Specific to your region. Default is set to an AMI
  in the af-south-1 region.'
  Type: String
  Default: ami-0438616cef15ba2ca
 
 InstanceType: 
  Description: "Bastion EC2 instance type"
  Type: String
  Default: "t2.medium"

Resources: 
 BastionInstance: 
  Type: "AWS::EC2::Instance"
  Properties: 
   InstanceType: !Ref InstanceType
   SecurityGroupIds: 
    - !Ref InstanceSecurityGroup
   KeyName: !Ref KeyName
   ImageId: !Ref AMI

   SubnetId: 
    Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
   
   
 InstanceSecurityGroup: 
  Type: "AWS::EC2::SecurityGroup"
  Properties: 
   GroupDescription: "Enable SSH access via port 22"
   VpcId: 
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"  
   SecurityGroupIngress: 
    - IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp:  "0.0.0.0/0"
      
Outputs: 
 InstanceId: 
  Description: "InstanceId of the newly created EC2 instance"
  Value: 
   Ref: BastionInstance
 
 PublicIP: 
  Description: "Public IP address of the newly created EC2 instance"
  Value: 
   "Fn::GetAtt": 
    - BastionInstance
    - PublicIp

 sgBastion:
    Description: Bastion SecurityGroup Export
    Value: 
      !GetAtt
        - InstanceSecurityGroup
        - GroupId
    Export:
      Name: !Sub "${EnvironmentName}-BastionSecurityGroupID" 